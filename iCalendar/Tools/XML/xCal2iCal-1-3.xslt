<?xml version="1.0" encoding="utf-8"?>
<!--

This software is provided FREE of charge to use as you see fit.

 -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xCal="http://ietf.org/rfc/rfcXXXX.txt">
<xsl:strip-space elements="*"/>
<xsl:preserve-space elements="text"/>
<xsl:output method="text" media-type="text/calendar" encoding="utf-8"/>
<xsl:template match="/">
<xsl:text>Content-Type:text/calendar; charset=utf-8&#x0D;&#x0A;&#x0D;&#x0A;</xsl:text><xsl:apply-templates select="iCalendar"/></xsl:template>
<xsl:template match="xCal:vcalendar">
<xsl:text>BEGIN:VCALENDAR&#x0D;&#x0A;</xsl:text>
<xsl:for-each select="xCal:vevent">
<xsl:text>BEGIN:VEVENT&#x0D;&#x0A;</xsl:text>
<xsl:for-each select="xCal:valarm">
<xsl:text>BEGIN:VALARM&#x0D;&#x0A;</xsl:text>
<xsl:apply-templates select="xCal:*"/>
<xsl:text>END:VALARM&#x0D;&#x0A;</xsl:text>
</xsl:for-each>
<xsl:apply-templates select="xCal:*"/>
<xsl:text>END:VEVENT&#x0D;&#x0A;</xsl:text>
</xsl:for-each>
<xsl:for-each select="xCal:vtodo">
<xsl:text>BEGIN:VTODO&#x0D;&#x0A;</xsl:text>
<xsl:for-each select="xCal:valarm">
<xsl:text>BEGIN:VALARM&#x0D;&#x0A;</xsl:text>
<xsl:apply-templates select="xCal:*"/>
<xsl:text>END:VALARM&#x0D;&#x0A;</xsl:text>
</xsl:for-each>
<xsl:apply-templates select="xCal:*"/>
<xsl:text>END:VTODO&#x0D;&#x0A;</xsl:text>
</xsl:for-each>
<xsl:for-each select="xCal:vcard">
<xsl:text>BEGIN:VCARD&#x0D;&#x0A;</xsl:text>
<xsl:apply-templates select="xCal:*"/>
<xsl:text>END:VCARD&#x0D;&#x0A;</xsl:text>
</xsl:for-each>
<xsl:for-each select="xCal:vjournal">
<xsl:text>BEGIN:VJOURNAL&#x0D;&#x0A;</xsl:text>
<xsl:for-each select="xCal:valarm">
<xsl:text>BEGIN:VALARM&#x0D;&#x0A;</xsl:text>
<xsl:apply-templates select="xCal:*"/>
<xsl:text>END:VALARM&#x0D;&#x0A;</xsl:text>
</xsl:for-each>
<xsl:apply-templates select="xCal:*"/>
<xsl:text>END:VJOURNAL&#x0D;&#x0A;</xsl:text>
</xsl:for-each>
<xsl:for-each select="xCal:vtimezone">
<xsl:text>BEGIN:VTIMEZONE&#x0D;&#x0A;</xsl:text>
<xsl:for-each select="xCal:standard">
<xsl:text>BEGIN:STANDARD&#x0D;&#x0A;</xsl:text>
<xsl:apply-templates select="xCal:*"/>
<xsl:text>END:STANDARD&#x0D;&#x0A;</xsl:text>
</xsl:for-each>
<xsl:for-each select="xCal:daylight">
<xsl:text>BEGIN:DAYLIGHT&#x0D;&#x0A;</xsl:text>
<xsl:apply-templates select="xCal:*"/>
<xsl:text>END:DAYLIGHT&#x0D;&#x0A;</xsl:text>
</xsl:for-each>
<xsl:text>END:VTIMEZONE&#x0D;&#x0A;</xsl:text>
</xsl:for-each>
<xsl:text>X-INTELLICAL-COMMENT;url="http://IntelliCal.com/xml/xCal2iCal.xslt":Generated by INTELLICAL-XSLT xCal to iCal converter V1.0&#x0D;&#x0A;</xsl:text>
<xsl:text>END:VCALENDAR&#x0D;&#x0A;</xsl:text>
</xsl:template>
<xsl:template match="xCal:*">
<xsl:value-of select="translate(local-name(), 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')"/>
<xsl:for-each select="@xml:lang"><xsl:call-template name="convert-lang"/></xsl:for-each>
<xsl:variable name="LangName">lang</xsl:variable>
<xsl:for-each select="@*"><xsl:variable name="ParamName" select="local-name()"/><xsl:choose><xsl:when test="$ParamName!=$LangName">;<xsl:value-of select="translate(local-name(), 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')"/>="<xsl:value-of select="."/>"</xsl:when></xsl:choose></xsl:for-each>:<xsl:call-template name="data-lf-wrap"><xsl:with-param name="sometext" select="."/></xsl:call-template><xsl:text>&#x0D;&#x0A;</xsl:text>
</xsl:template>
<xsl:template name="data-lf-wrap">
<xsl:param name="sometext"/>
<xsl:variable name="lf"><xsl:text>
</xsl:text></xsl:variable>
<xsl:choose>
<xsl:when test="contains($sometext,$lf)">
<xsl:value-of select="substring-before($sometext,$lf)"/>
<xsl:text>&#x0D;&#x0A; </xsl:text>
<xsl:call-template name="data-lf-wrap">
<xsl:with-param name="sometext" select="substring-after($sometext,$lf)"/>
</xsl:call-template>
</xsl:when>
<xsl:otherwise>
<xsl:value-of select="$sometext"/>
</xsl:otherwise>
</xsl:choose>
</xsl:template>
<xsl:template name="convert-lang">
<xsl:text>;LANGUAGE="</xsl:text><xsl:value-of select="."/><xsl:text>"</xsl:text>
</xsl:template>
</xsl:stylesheet>
